import Sound.Tidal.MIDI.Context
import Sound.Tidal.MIDI.Control
import Sound.Tidal.Params
import Sound.Tidal.MIDI.CC
displayOutputDevices >>= putStrLn
devices <- midiDevices
m10 <- midiStream devices "loopMIDI Port 1" 10 ccallController
m11 <- midiStream devices "loopMIDI Port 3" 11 ccallController
m12 <- midiStream devices "loopMIDI Port 2" 12 ccallController

cps 1
bps (80/60)

   m10 $ every 24 (const $ slow 16 $ iter (irand 16) $ every 8 (rev) $ scramble 12 $ cat [n "[0 4 7 11] 2 ~", n "[0 5 9 ~] 4 ~", n "[2 5 9] 0 ~"] # cc17 ((slow 32) $ scale (0) (0.2) sine1) # cc18 ((slow 16) $ scale (0) (1) sine1) # cc19 ((slow 16) $ scale (0) (52) sine1) # cc20 ((slow 12) $ scale (50) (100) sine1) # cc21 ((slow 56) $ scale (45) (125) sine1))
      $ every 32 (const $ slow 12 $ iter (irand 16) $ every 8 (rev) $ scramble 12 $ cat [n "[0 4 7 11] 2 ~", n "[0 5 9 ~] 4 ~", n "[2 5 9] 0 ~"] # cc17 ((slow 32) $ scale (0) (0.2) sine1) # cc18 ((slow 16) $ scale (0) (1) sine1) # cc19 ((slow 16) $ scale (0) (52) sine1) # cc20 ((slow 12) $ scale (50) (100) sine1) # cc21 ((slow 56) $ scale (45) (125) sine1))
      $ someCyclesBy 0.10 (slow 8) $ slow 8 $ iter (irand 16) $ every 8 (rev) $ scramble 12 $ cat [n "[0 4 7 11] 2 ~", n "[0 5 9 ~] 4 ~", n "[2 5 9] 0 ~" ] # dur ((slow 8) $ scale (0.5) (4) sine1) # attack ((slow 32) $ scale (0) (0.2) sine1) # gain ((slow 48) $ scale (0) (1) sine1)
      # cc17 ((slow 32) $ scale (0) (0.9) sine1) -- release
      # cc18 ((slow 16) $ scale (0) (25) sine1) -- decay
      # cc19 ((slow 16) $ scale (0) (85) sine1) -- attack
      # cc20 ((slow 12) $ scale (25) (75) sine1) -- reverb delaytime
      # cc21 ((slow 56) $ scale (0) (10) sine1) -- cutoff

m11  $ degradeBy 0.4 $ every 9 (rev) $  within (0, 0.3) (slow 2) $ within (0.3, 0.8) (jux ((# speed "0.1") . rev)) $ slow 2 $ cat [n "~ ~ [9, 14] ~ ~ ~ ~ ~ ~ ~ 16 ~ ~ ~ ~ ~ ~ 7 ~ ~ ~", n "~ ~ ~ [16, 19] ~ ~ ~ ~ [17, 21] ~ ~"]  # dur ((slow 16) $ scale (0.5) (1) sine1)

m12 $ slow 2 $ cat [n "-15 ~ -10 ~ ~ ~ ~ ", n  "-15 ~ -22 ~ ~ ~ ~ "] # dur 2.5


every 11 (const $ slow 2 $ iter (irand 16) $ every 8 (rev) $ scramble 12 $ cat [n "[-19 -7 1 10] 8 ~", n "[-5 -17 0  5] 4 ~", n "[-3 -15] 0 ~")
fmap +7

import Sound.Tidal.SpectralTricks

--samples
do
let x = slow 5 $ striate 20 $ s "my5:41" # legato ((slow 8) $ scale (25) (100) sine1) # attack ((slow 16) $ scale (0) (0.3) sine1)
let x1 = slow 2 $ striate' 3 (7/8) $ s "ruffin:2 ~ ruffin:3 ~ ~ ~ " # legato 2.72 # attack ((slow 16) $ scale (0.15) (0.25) sine1) # nudge ((slow 16) $ scale (-0) (0.95) sine1) # gain ((slow 24) $ scale (1.1) (0.2) rand)
let x3a = striate' 2 (4/8) $ s "my:40 ~ " # legato 3.2 # gain ((slow 24) $ scale (0.2) (0.9) sine1)
let x3test = striate' 2 (4/8) $ s "my:40 ~ " # legato 3.2 # gain ((slow 24) $ scale (0.2) (0.78) rand)
let x4test = (|+| speed ((slow 32) $ scale (0.90) (0.99) sine1)) $ slow 4 $ striate' 2 (3/8) $ s "my5:21 ~ " # legato 20 # gain ((slow 36) $ scale (0.2) (1.1) sine1)
let ruffin1 = every 2 (linger 0.25) $ every 5 (rev) $ degradeBy (slow 32 $ scale (0) (1) sine1) $ slow 4 $ striate' 7 (3/8) $ cat [s "~ my4:3 ~", s "~"] # attack 1.4 # up (-5) # gain ((slow 24) $ scale (1.2) (0.4) rand) # up "-12"
let copypasta = slow 2 $ randslice 8 $ s "my4:5" # gain ((slow 86) $ scale (0.8) (1) sine1)  # smear ((slow 29) $ scale (0.1) (5) sine1) # orbit 1
let copypasta2 = slow 2 $ randslice 36 $ s "mercurial:6" # gain ((slow 86) $ scale (0.8) (1) sine1) # legato 4 # smear ((slow 29) $ scale (0.1) (5) sine1) # orbit 1
-- let copypasta = loopAt 32 $ s "my4:5" # gain ((slow 86) $ scale (0.8) (1.5) sine1)  # smear ((slow 48) $ scale (4) (8) sine1) # orbit 1
d1 $ stack [copypasta2] # orbit 0 -- use ensoniq 84 chorus line

--kick -- 62 - eqgatechoirplate
do
let k = degradeBy 0.2 $ s "electro1:6 electro1:6? ~ ~ ~ ~? electro1:6? ~ electro1:6 electro1:6? ~ ~ ~ ~ electro1:6? ~" # legato (slow 18 $ scale (0.2) (1) sine1) # gain ((slow 47) $ scale (0.9) (1) rand)
let k2 = degradeBy 0.02 $ s "~ electro1:6*2" # legato (slow 18 $ scale (0.2) (1) sine1) # gain ((slow 47) $ scale (0.88) (1) rand)
d2 $ stack [k2] # orbit 1
--degradeBy 0.5 $ every 9 (rev) $ within (0, 0.3) (brak) $


--drums
do
--let sn = stut 4 ((slow 16) $ scale (0.35) (0.5) sine1) 0.45 $ s "~ jd:24 ~ jd:24" # gain 1 # up "0.85"
let sn1 = ifp ((== 0).(flip mod 2)) (striate 1) (striate 4) $ s "~ jd:33 ~ jd:33" # gain 0.85 # up "0" # legato (slow 32 $ scale (0.1) (0.3) sine1)
let hih = ifp ((== 0).(flip mod 3)) (striate 2) (striate 4) $ s "bgvinylhats:38*4" # gain 0.58 # up "-0.8"
let snare = ifp ((== 0).(flip mod 3)) (striate 2) (striate 4) $ s "~ sn:12 ~ sn:43" # gain 0.75 # legato (slow 32 $ scale (0.1) (0.5) sine1) # up "0"
d3 $  stack [snare] # orbit 2
-- degradeBy 0.5 $ every 9 (rev) $  within (0, 0.3) (brak) $ within (0.3, 0.8) (jux ((# speed "0.1") . linger 17)) $

do
let k2 = degradeBy 0.8 $ every 9 (rev) $  within (0, 0.3) (brak) $ within (0.3, 0.8) (jux ((# speed "0.1") . rev)) $ every' 8 7 (within (0.25, 1) (stut 6 0.25 0.75)) $ s "~ jd:33 ~ jd:33" # gain 1 # up "0.85"
let k21 = s "fr:52 ~ fr:53 ~" # gain 0.7 # legato (slow 32 $ scale (0.1) (0.7) sine1) # up "1"
let click = s "JUKE17:4*2" # gain 0.65
let click2 = s "bgvinylkicks:122" # gain 0.65
d4 $ stack [click] # orbit 3


d4 $ silence

-- workings / loose ends

-- let x1 = slow 2 $ striate' 3 (7/8) $ s "ruffin:2 ~ ruffin:3 ~ ~ ~ " # legato 2.9 # attack ((slow 16) $ scale (0.15) (0.25) sine1) # nudge ((slow 16) $ scale (-0) (0.95) sine1) # gain ((slow 24) $ scale (0.95) (0.2) sine1)
-- let x2 = slow 2 $ striate' 3 (7/8) $ s "ruffin:5 ~ ruffin:6 ~ ~ ~ " # legato 2.9 # attack ((slow 16) $ scale (0.15) (0.25) sine1) # nudge ((slow 16) $ scale (-0) (0.95) sine1) # gain ((slow 24) $ scale (0.99) (0.2) sine1)

--m9 $ every 12 (const $ slow 25 $ iter (irand 16) $ every 8 (rev) $ scramble 12 $ cat [n "[-5 -1 2 6] -3 ~", n "[-5 - -4 ~] -1 ~", n "[-3 0 -4] 0 ~"] # cc17 ((slow 32) $ scale (0) (0.2) sine1) # cc18 ((slow 16) $ scale (0) (1) sine1) # cc19 ((slow 16) $ scale (0) (52) sine1) # cc20 ((slow 12) $ scale (50) (100) sine1) # cc21 ((slow 56) $ scale (45) (125) sine1))
--   $ every 24 (const $ slow 18 $ iter (irand 16) $ every 8 (rev) $ scramble 12 $ cat [n "[-5 -1 2 6] -3 ~", n "[-5 - -4 ~] -1 ~", n "[-3 0 -4] 0 ~"] # cc17 ((slow 32) $ scale (0) (0.2) sine1) # cc18 ((slow 16) $ scale (0) (1) sine1) # cc19 ((slow 16) $ scale (0) (52) sine1) # cc20 ((slow 12) $ scale (50) (100) sine1) # cc21 ((slow 56) $ scale (45) (125) sine1))
--   $ someCyclesBy 0.10 (slow 4) $ slow 4 $ iter (irand 16) $ every 8 (rev) $ scramble 12 $ cat [n "[-5 -1 2 6] -3 ~", n "[-5 - -4 ~] -1 ~", n "[-3 0 -4] 0 ~"] # dur ((slow 8) $ scale (0.5) (4) sine1) # attack ((slow 32) $ scale (0) (0.2) sine1)
--   # cc17 ((slow 32) $ scale (0) (0.9) sine1) -- release
--   # cc18 ((slow 16) $ scale (0) (25) sine1) -- decay
--   # cc19 ((slow 16) $ scale (0) (85) sine1) -- attack
--   # cc20 ((slow 12) $ scale (25) (75) sine1) -- reverb delaytime
--   # cc21 ((slow 56) $ scale (0) (10) sine1) -- cutoff
