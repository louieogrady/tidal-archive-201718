import Sound.Tidal.SpectralTricks

bps (104/60)

d3 $ silence

do
let k3 = every 2 (|-| speed "-0.99") $ slow "[4 7] * 2.86" $ striate' 4 (6/8) $ s "808bd:16 ~ ~ ~" # gain ((slow 10) $ scale (1) (1.2) rand) # up "-7 -8 -10 -14"
let k4 = slow "[4 20] * 1.97" $ striate' 4 (7/8) $ s "~ ~ voodoo:4 ~" # gain ((slow 10) $ scale (0.8) (1) rand) # up "-3"
let k5 = degradeBy 0.08 $ slow 2 $ striate' 4 (7/8) $ s "808bd:10 ~" # gain ((slow 53) $ scale (1.2) (1.6) rand) # up "-2"
let snare = degradeBy 0.2 $ slow "[11 24] * 1.97" $ striate' 9 (3/8) $ s "~ electro1:3 ~ [~ electro1:3 ~]" # gain ((slow 53) $ scale (0.8) (0.9) rand) # up "-1"
let k34 = slow "[4 12] * 1.48" $ striate' 3 (7/8) $ s "mydrums:700*16" # gain 0.8 # lbrick ((slow 15) $ scale (0) (0.8) rand) # release ((slow 85) $ scale (0) (0.6) rand) # attack ((slow 85) $ scale (0.1) (0.6) rand)
let mys = fast 2 $ every 2 (|-| speed "-0.99") $ slow "[8 16] * 1.48" $ striate 64 $ s "my3:35" # legato 0.2 # up "-5 -6"
let mys1 =  every 2 (|-| speed "-0.99") $ slow "[8 16] * 2.86" $ striate 128 $ s "my3:11" # up "0.94"
let mys2 = slow "[4 20] * 1.97" $ striate 128 $ s "~ ~ my3:65" # legato 0.3 # up "0.99" # attack 0.12
d3 $ every' 8 7 (within (0.25, 1) (stut 6 0.25 1)) $ stack [mys2] # orbit 2

do
-- ensoniq = 11
let randsnare = every' 8 7 (within (0.25, 1) (stut 6 0.25 0.75)) $ degradeBy 0.7 $ every 5 (rev) $ every 2 (|-| speed "-0.99") $ slow "[3 6] * 1.48" $ striate' 3 (7/8) $ s "~ newnotes" # n (choose [0, 8, 5, 14]) # gain 0.8 # release ((slow 85) $ scale (0) (0.6) rand) # attack ((slow 85) $ scale (0.1) (0.6) rand) # up "-8" # legato ((slow 85) $ scale (0.1) (1) rand)
let randhh = slow "[3 6] * 1.48" $ striate' 4 (4/8) $ s "~ mydrums:1418*16" # gain 0.8 # release ((slow 85) $ scale (0) (0.6) rand) # attack ((slow 85) $ scale (0.1) (0.6) rand) # up "-2" # legato ((slow 85) $ scale (0.1) (1) rand)
let randsamp = every 7 (rev) $ (|-| speed "-0.99" ) $ slow "[10 24] * 1.753" $ striate' 4 (3/8) $ s "~ beatstochop:145, [ beatstochop:146, ~ ~ beatstochop:148]" # gain ((slow 85) $ scale (0.8) (1.3) rand) # attack ((slow 85) $ scale (0.1) (3) rand) # legato 0.02 # up "-36 -24 -48 -12" # legato ((slow 85) $ scale (1) (6) rand)
let pads = slow "[3 6] * 1.48" $ striate' 4 (5/8) $ s "~ 808bd:16" # gain 1.4 # freeze 1 # binshift ((slow 2000) $ scale (0) (0.08) rand) # release ((slow 85) $ scale (0) (0.2) rand) # attack ((slow 85) $ scale (0.1) (0.8) rand) # up "-2"
let shaker = every' 8 7 (within (0.25, 1) (|+| speed ((slow 100) $ scale (0) (-1.5) sine1))) $ s "~ ~ K4:9 ~" # gain ((slow 10) $ scale (0.5) (0.7) rand) # up "-1"
let randsamp2 = fast 2 $ every' 8 7 (within (0.25, 1) (|+| speed ((slow 100) $ scale (0) (-0.7) sine1))) $ s "~ ~ my4:06 ~" # gain ((slow 10) $ scale (0.5) (1) rand) # up "-1" # legato 10
let randsamp3 = fast 2 $ every' 8 7 (within (0.25, 1) (|+| speed ((slow 100) $ scale (0) (-0.7) sine1))) $ s "my4:07 ~ ~ ~" # gain ((slow 10) $ scale (0.5) (1) rand) # up "-1" # legato 10 # attack 0.5
let randsamp4 = fast 2 $ every' 8 7 (within (0.25, 1) (|+| speed ((slow 100) $ scale (0) (-0.7) sine1))) $ s "my4:09 ~ ~ ~" # gain ((slow 10) $ scale (0.5) (1) rand) # up "-1" # legato 10 # attack 0.5
d2 $ stack [randsnare, randsamp3, randsamp4] # orbit 0

do
let abc =  degradeBy 0.8 $  "<0 0.25 1.75>" <~ s "piano ~ piano:9 ~ piano:7 ~ piano:3" # up "-12, -5, -8 ~ ~ -12 ~ ~ -3" # attack (scale 0.4 1.3 rand) # gain ((slow 85) $ scale (0.9) (1.7) rand) # release ((slow 85) $ scale (4) (8) rand)
let kick = fast 2 $ every 3 (rev) $ every' 8 4 (within (0.6, 1.7) (|+| speed ((slow 100) $ scale (0) (1.5) sine1))) $ degradeBy 0.2 $ s "808bd:14 ~ 808bd:14 ~  ~ 808bd:16 ~ 808bd:14" # gain 0.95 # legato 2 #  attack ((slow 65) $ scale (0.4) (0.7) rand)
let snare2 = every 7 (rev) $ every' 8 4 (within (0.6, 1.7) (|+| speed ((slow 100) $ scale (0) (1.5) sine1))) $ degradeBy 0.2 $ slow "[4 6] * 1.48" $ striate' 4 (5/8) $ s "~ K6 ~ K6 ~ K6 ~ K6" # gain 0.8 # legato 2 # attack ((slow 85) $ scale (0.2) (0.7) rand)
let kick2 = s "Kickz Kickz ~ Kickz ~ Kickz ~ ~ Kickz ~ Kickz ~" # n (choose [16, 12, 9, 7, 8, 5]) # gain ((slow 65) $ scale (0.58) (0.65) rand)
let kick3 = s "Kickz ~ ~ Kickz Kickz ~ ~ ~ Kickz ~ Kickz ~" # n (choose [16, 9, 5]) # gain ((slow 65) $ scale (0.58) (0.65) rand)
let kick4 = s "Kickz ~ ~ ~ Kickz ~ ~ ~ Kickz ~ Kickz ~" # n (choose [9, 5, 7, 12]) # gain ((slow 65) $ scale (0.58) (0.65) rand)
d1 $ stack [snare2, kick2] # orbit 1


-- next steps = add percussion over the top?! - keep things fresh and dynamic

d1 $ silence

--midi
import Sound.Tidal.MIDI.Context
import Sound.Tidal.MIDI.Control
import Sound.Tidal.Params
import Sound.Tidal.MIDI.CC
displayOutputDevices >>= putStrLn
devices <- midiDevices
m7 <- midiStream devices "loopMIDI Port 1" 9 ccallController

m7 $  every 24 (rev) $ every 6 (const $ cat $ [n " ~ 0, 2, 5"])  $ every 4 (const $ cat $ [n " ~ -2, -14, -2 "]) $ n "~"

--m7 $  every 24 (rev) $ every 6 (const $ cat $ [n " -5 ~ 8 -3 ~ 10 -12 ~ ~"])  $ every 4 (const $ cat $ [n "10 24 ~ -5 ~ 8 ~ -3"]) $ n "~"

m7 $ silence

-- workings
do
let g1 = ((slow 8) $ scale (0.78) (1) sine1)
let g2 = ((slow 15) $ scale (0.75) (1.05) sine1)
--
let snare = degradeBy ((slow 47) $ scale (0.2) (0.6) sine1) $ slow 2 $ s "~ ~ mydrums:0412 ~" # gain ((slow 32) $ scale (0.6) (0.8) sine1) # up "-5"
let kick = degradeBy ((slow 29) $ scale (0.1) (0.5) sine1) $ slow 2 $ s "~ mydrums:0353" # gain g1
let kick2 = degradeBy ((slow 47) $ scale (0.2) (0.4) sine1) $ slow 2 $ s "~ ~ ~ mydrums:0331" # gain g1
let kick3 = degradeBy ((slow 29) $ scale (0.1) (0.5) sine1) $ slow 2 $ s "~ mydrums:0332" # gain g2
d2 $ fast 2 $ stack [snare] # orbit 1

--kick?
--let k = slow "[3 6] * 1.48" $ striate' 4 (5/8) $ s "~ mydrums:0317 ~ mydrums:0318*2" # gain 1.2

----
do
-- ensoniq -- 32 -- Z-box fat bass
let perc4 = degradeBy 0.1 $ slow "[3 6] * 1.48" $ (|+| speed "0.95") $ every 9 (const $ swingBy 0.40 (4/4) $ s "~ realclaps:1" # gain ((slow 32) $ scale (0.3) (0.5) rand) # legato "[0.1 2] * 1.8") $ swingBy 0.41 (4/4) $ s "~ realclaps:1" # legato "[0.1 2] * 1.6"
let snare = degradeBy ((slow 47) $ scale (0.4) (0.6) sine1) $ s "~ ~ mydrums:0412 ~" # gain ((slow 32) $ scale (0.65) (0.9) rand) # up "-5"
d2 $ stack [snare, perc4] # orbit 1


----
do
--let y = every 3 (|-| speed "-0.99") $ slow 2 $ brak $ let x = "~" in interlace (sound $ slow 4 $ x) (sound $ every 3 (append "[my5:15]*6") x) |+| speed "-0.99" # gain 1 # legato 15 # attack 0.5
let z = every 5 (|-| speed "-0.99")$ slow 2 $ brak $ let x = "my3:49" in interlace (sound $ slow 4 $ x) (sound $ every 3 (append "[~ ~ my5:47]*7") x) |+| speed "-0.99" # gain 1 # legato 15 # attack 0.5
let k = every 7(|-| speed "-0.99")$ slow 2 $ brak $ let x = "~ ~ ~ ~" in interlace (sound $ slow 2 $ x) (sound $ every 3 (append "~ ~ uxay:1 [uxay ~ ~ ]*7") x) |+| speed "-0.99" # gain 1 # legato 16 # attack 0.5
let s1 = every 4 (|-| speed "-0.99") $ slow 2 $ brak $ let x = "~ ~ ~ ~" in interlace (sound $ slow 1 $ x) (sound $ every 3 (append "~ ~ ~ ~ uxay ~") x) |+| speed "-0.99" # gain 1 # legato 15 # attack 0.5
let pads = slow "[3 6] * 1.48" $ striate' 4 (5/8) $ s "~ 808bd:16" # gain 1.8 # freeze 1 # binshift ((slow 2000) $ scale (0) (0.08) rand) # release ((slow 85) $ scale (0) (0.2) rand) # attack ((slow 85) $ scale (0.1) (0.6) rand) # up "-2"
--let nn = slow 4 $ brak $ let x = "~ newnotes ~ ~" in interlace (sound $ slow 1 $ x) (sound $ every 7 (append "~ ~ ~ ~ newnotes ~") x) # n (choose [1..14])|+| speed "-0.99" # gain 0.7 # legato 6 # attack 0.1
d3 $ stack [pads] # orbit 2
-- # binshift ((slow 15) $ scale (0) (0.8) rand) # release ((slow 85) $ scale (0) (4) rand) # attack ((slow 85) $ scale (0.1) (4) rand)

do
let g1 = ((slow 8) $ scale (0.78) (1) sine1)
let g2 = ((slow 15) $ scale (0.75) (1.05) sine1)
--
let samp = slow "[3 6] * 1.48" $ striate' 7 (5/8) $ (|-| speed "-0.99") $ slow 4 $ let x = "~ ~ ~ beatstochop:56 " in interlace (sound $ slow 2 $ x) (sound $ every 3 (append "[beatstochop:14]") x) # gain 0.8 # legato 3 # attack 0.5 # freeze 1
d1 $ stack [samp] # orbit 0

do
let pads = slow "[3 6] * 1.48" $ striate' 4 (5/8) $ s "~ 808bd:16 ~ 808bd:14*2" # gain 1.3 # binshift ((slow 15) $ scale (0) (0.8) rand) # release ((slow 85) $ scale (0) (0.6) rand) # attack ((slow 85) $ scale (0.1) (0.6) rand) # up "6"
d4 $ stack [pads] # orbit 3

do
let k2 = slow "[4 6] * 1.48" $ striate' 4 (5/8) $ s "808bd:16 ~ 808bd:14*2 ~" # gain 1.1
let k3 = every 2 (|-| speed "-0.99") $ slow "[4 7] * 2.86" $ striate' 4 (6/8) $ s "808bd:16 ~ ~ ~" # gain ((slow 10) $ scale (1) (1.2) rand) # up "-7 -8 -10 -14"
let k4 = slow "[4 20] * 1.97" $ striate' 4 (7/8) $ s "~ ~ voodoo:4 ~" # gain ((slow 10) $ scale (0.8) (1) rand) # up "-3"
let k5 = degradeBy 0.08 $ slow 2 $ striate' 4 (7/8) $ s "808bd:10 ~" # gain ((slow 53) $ scale (1.2) (1.6) rand) # up "-2"
let k6 = degradeBy 0.2 $ slow "[11 24] * 1.97" $ striate' 9 (3/8) $ s "~ electro1:3 ~ [~ electro1:3 ~]" # gain ((slow 53) $ scale (0.8) (0.9) rand) # up "-1"
let k34 = slow "[4 12] * 1.48" $ striate' 3 (7/8) $ s "mydrums:700*16" # gain 0.8 # lbrick ((slow 15) $ scale (0) (0.8) rand) # release ((slow 85) $ scale (0) (0.6) rand) # attack ((slow 85) $ scale (0.1) (0.6) rand)
let mys = every 2 (|-| speed "-0.99") $ slow "[8 16] * 1.48" $ striate 64 $ s "my3:35" # legato 0.2 # up "-5, -6"
let mys1 =  every 2 (|-| speed "-0.99") $ slow "[8 16] * 2.86" $ striate 128 $ s "my3:11" # up "0.94"
let mys2 = slow "[4 20] * 1.97" $ striate 128 $ s "~ ~ my3:65" # legato 0.3 # up "0.99" # attack 0.12
d3 $ every' 8 7 (within (0.25, 1) (stut 6 0.25 1)) $ stack [mys, mys2, mys1, k3, k6] # orbit 2
