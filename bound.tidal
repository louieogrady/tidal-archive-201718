bps (90/120)

do
let bo = degradeBy 0.3 $ slow 46 $ striate' 24 (4/8) $ s "my5:20" # begin 4 # legato 2 # attack 2 # delay ((slow 36) $ scale (0.1) (1) sine1) # delaytime ((slow 24) $ scale (0.1) (4) sine1) # delayfeedback ((slow 12) $ scale (0.1) (0.2) sine1)
let bo2 = degradeBy 0.2 $ slow 89 $ striate' 12 (7/8) $ s "~ my5:36" # begin 4 # legato 7 # attack 2 # delay ((slow 49) $ scale (0.1) (1) sine1) # delaytime ((slow 100) $ scale (0.1) (4) sine1) # delayfeedback ((slow 112) $ scale (0.1) (0.2) sine1)
let bo3 = degradeBy 0.3 $ slow 101 $ striate' 17 (3/8) $ s "~ ~ ~ mercurial2:9" # legato 4 # attack 2 # delay ((slow 57) $ scale (0.1) (1) sine1) # delaytime ((slow 200) $ scale (0.1) (4) sine1) # delayfeedback ((slow 87) $ scale (0.1) (0.2) sine1)
let bo4 = fast 2 $ slow 59 $ striate' 21 (5/8) $ s "~ ~ ~ ~ ~ my4:5" # begin 4 # legato 4 # attack 2 # delay ((slow 68) $ scale (0.1) (1) sine1) # delaytime ((slow 86) $ scale (0.1) (4) sine1) # delayfeedback ((slow 363) $ scale (0.1) (0.2) sine1)
d1 $ within (0, 0.5) (# speed "-0.9") $ within (0.5, 0.8) (# speed "-0.8") $ stack [bo4] # orbit 0 # gain ((slow 68) $ scale (0.75) (1.4) sine1)  # smear ((slow 12) $ scale (5) (10) sine1)

do
let k = fast 4 $ every 5 (const $ s "~ mydrums:355*2 ~ mydrums:355 ~" #  legato ((slow 48) $ scale (2) (3) sine1)) $ s "~mydrums:311 ~ mydrums:31 " # legato ((slow 48) $ scale (1) (3) sine1) # gain 1
let k2 = fast 2 $ within (0, 0.65) (# speed 2) $ every 16 (within (0.9, 0.99) (# speed "-0.7")) $ degradeBy 0.2 $ every 11 (const $ s "~ mydrums:456 ~ mydrums:411" # gain 0.8 ) $ s "~ mydrums:456 ~ mydrums:411]" # gain 0.7
let b2 = within (0, 0.34) (# speed 2) $ striate' 4 (5/8) $ slow 4 $ s "bound:1" # gain 1.5 # legato 10
d4 $ stack [k, k2, b2] # orbit 1

do
let kick = s  "mydrums:355*2 ~ mydrums:355*3 ~          mydrums:355*2 ~ ~ ~          mydrums:355*4? ~ ~ ~ "
let kick2 = s "mydrums:133 ~   mydrums:133   ~          mydrums:133   ~ ~ ~          mydrums:133?   ~ ~ ~ "
let kickl = s "~           ~   ~             mydrums:05               ~ ~ mydrums:05 ~              mydrums:05  ~ ~" # gain 0.9
d3 $ stack [kick, b2, k2] # orbit 2

d1 $ silence

-- midi
import Sound.Tidal.MIDI.Context
import Sound.Tidal.MIDI.Control
import Sound.Tidal.Params
import Sound.Tidal.MIDI.CC
displayOutputDevices >>= putStrLn
devices <- midiDevices
m9 <- midiStream devices "loopMIDI Port 2" 9 ccallController
--
m9 $ every 12 (const $ slow 25 $ iter (irand 16) $ every 8 (rev) $ scramble 12 $ cat [n "[-5 -1 2 6] -3 ~", n "[-5 - -4 ~] -1 ~", n "[-3 0 -4] 0 ~"] # cc17 ((slow 32) $ scale (0) (0.2) sine1) # cc18 ((slow 16) $ scale (0) (1) sine1) # cc19 ((slow 16) $ scale (0) (52) sine1) # cc20 ((slow 12) $ scale (50) (100) sine1) # cc21 ((slow 56) $ scale (45) (125) sine1))
   $ every 24 (const $ slow 18 $ iter (irand 16) $ every 8 (rev) $ scramble 12 $ cat [n "[-5 -1 2 6] -3 ~", n "[-5 - -4 ~] -1 ~", n "[-3 0 -4] 0 ~"] # cc17 ((slow 32) $ scale (0) (0.2) sine1) # cc18 ((slow 16) $ scale (0) (1) sine1) # cc19 ((slow 16) $ scale (0) (52) sine1) # cc20 ((slow 12) $ scale (50) (100) sine1) # cc21 ((slow 56) $ scale (45) (125) sine1))
   $ someCyclesBy 0.10 (slow 4) $ slow 4 $ iter (irand 16) $ every 8 (rev) $ scramble 12 $ cat [n "[-5 -1 2 6] -3 ~", n "[-5 - -4 ~] -1 ~", n "[-3 0 -4] 0 ~"] # dur ((slow 8) $ scale (4) (25) sine1) # attack ((slow 32) $ scale (0) (0.2) sine1)
   # cc17 ((slow 32) $ scale (0) (0.9) sine1) -- release
   # cc18 ((slow 16) $ scale (0) (25) sine1) -- decay
   # cc19 ((slow 16) $ scale (0) (85) sine1) -- attack
   # cc20 ((slow 12) $ scale (25) (75) sine1) -- reverb delaytime
   # cc21 ((slow 56) $ scale (0) (10) sine1) -- cutoff
   # cc22 ((slow 6) $ scale (0) (100) sine1) -- xz

m10 $ every 24 (const $ slow 16 $ iter (irand 16) $ every 8 (rev) $ scramble 12 $ cat [n "[0 4 7 11] 2 ~", n "[0 5 9 ~] 4 ~", n "[2 5 9] 0 ~"] # cc17 ((slow 32) $ scale (0) (0.2) sine1) # cc18 ((slow 16) $ scale (0) (1) sine1) # cc19 ((slow 16) $ scale (0) (52) sine1) # cc20 ((slow 12) $ scale (50) (100) sine1) # cc21 ((slow 56) $ scale (45) (125) sine1))
      $ every 32 (const $ slow 12 $ iter (irand 16) $ every 8 (rev) $ scramble 12 $ cat [n "[0 4 7 11] 2 ~", n "[0 5 9 ~] 4 ~", n "[2 5 9] 0 ~"] # cc17 ((slow 32) $ scale (0) (0.2) sine1) # cc18 ((slow 16) $ scale (0) (1) sine1) # cc19 ((slow 16) $ scale (0) (52) sine1) # cc20 ((slow 12) $ scale (50) (100) sine1) # cc21 ((slow 56) $ scale (45) (125) sine1))
      $ someCyclesBy 0.10 (slow 8) $ slow 8 $ iter (irand 16) $ every 8 (rev) $ scramble 12 $ cat [n "[0 4 7 11] 2 ~", n "[0 5 9 ~] 4 ~", n "[2 5 9] 0 ~" ] # dur ((slow 8) $ scale (6) (25) sine1) # attack ((slow 32) $ scale (0) (0.2) sine1) # gain ((slow 48) $ scale (0) (1) sine1)
      # cc17 ((slow 32) $ scale (0) (0.9) sine1) -- release
      # cc18 ((slow 16) $ scale (0) (25) sine1) -- decay
      # cc19 ((slow 16) $ scale (0) (85) sine1) -- attack
      # cc20 ((slow 12) $ scale (25) (75) sine1) -- reverb delaytime
      # cc21 ((slow 56) $ scale (0) (10) sine1) -- cutoff
